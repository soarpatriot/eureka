spring:

  pidfile: shared/tmp/pids/application.pid
  application:
    name: micro

  #boot:
  #  admin:
  #    context-path: /admin

  jackson:
    serialization:
      indent_output: true
endpoints:
    health:
      sensitive: false
server:
  port: ${PORT:8761}

turbine:
  #aggregator:
  appConfig: micro,open
  clusterNameExpression: 'default'



eureka:
  instance:
    hostname: peer1
  client:
    registerWithEureka: true
    fetchRegistry: true
    eurekaServerURLContext: eureka

    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/
logging:
    level:
        org.springframework: 'OFF'
        com.xiaojiuwo.models.mapper: 'DEBUG'


zuul:
  ignoredPatterns: /eureka/**
  routes:
    open:
      path: /open/**



---
spring:
  profiles: eureka-peer1
server:
  port: ${PORT:8761}
eureka:
  instance:
    hostname: 10.3.45.151
  client:
    registerWithEureka: true
    fetchRegistry: true

    serviceUrl:
      defaultZone: http://10.3.47.62:8761/eureka/

---
spring:
  profiles: eureka-peer2
server:
  port: ${PORT:8761}
eureka:
  instance:
    hostname: 10.3.47.62

  client:
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://10.3.45.151:8761/eureka/



---
spring:
  profiles: micro-peer1
server:
  port: ${PORT:8477}
eureka:
  instance:
    hostname: 10.230.3.140
  client:
    registerWithEureka: true
    fetchRegistry: true

    serviceUrl:
      defaultZone: http://10.230.4.11:8267/eureka/

---
spring:
  profiles: eureka-peer2
server:
  port: ${PORT:8267}
eureka:
  instance:
    hostname: 10.230.4.11

  client:
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://10.230.3.140:8477/eureka/